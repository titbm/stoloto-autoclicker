/**
 * Search Module - –õ–æ–≥–∏–∫–∞ –ø–æ–∏—Å–∫–∞ –∏ –∞–Ω–∞–ª–∏–∑–∞ –±–∏–ª–µ—Ç–æ–≤
 * –û—Ç–≤–µ—á–∞–µ—Ç –∑–∞ –∞–Ω–∞–ª–∏–∑ –±–∏–ª–µ—Ç–æ–≤ –∏ –æ—á–∏—Å—Ç–∫—É –≤—ã–±–æ—Ä–∞
 */

// –§—É–Ω–∫—Ü–∏—è –æ—á–∏—Å—Ç–∫–∏ –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö —á–∏—Å–µ–ª
async function clearSelection() {
    // –ù–∞—Ö–æ–¥–∏–º –∏ –Ω–∞–∂–∏–º–∞–µ–º –∫–Ω–æ–ø–∫—É "–°–±—Ä–æ—Å–∏—Ç—å" (–æ–±–Ω–æ–≤–ª–µ–Ω–Ω–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ —Å–∞–π—Ç–∞)
    const clearButton = Array.from(document.querySelectorAll('button')).find(btn => 
        btn.textContent.trim() === '–°–±—Ä–æ—Å–∏—Ç—å'
    );
    
    if (clearButton) {
        clearButton.click();
        await new Promise(resolve => setTimeout(resolve, 500));
        return true;
    }
    return false;
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –±–∏–ª–µ—Ç–∞
function analyzeTicket(ticket, numbers) {
    const state = window.stolotoState;
    
    // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ —á–∏—Å–ª–∞ –∏–∑ –¥–æ—á–µ—Ä–Ω–∏—Ö generic —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –±–∏–ª–µ—Ç–∞
    const numberElements = Array.from(ticket.querySelectorAll('*')).filter(el => {
        const text = el.textContent?.trim();
        if (!text) return false;
        const num = parseInt(text);
        return !isNaN(num) && num >= 1 && num <= 90 && text === num.toString();
    });
    
    if (numberElements.length === 0) {
        console.log('–ù–µ –Ω–∞–π–¥–µ–Ω—ã —á–∏—Å–ª–æ–≤—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã –≤ –±–∏–ª–µ—Ç–µ');
        return false;
    }
    
    const ticketNumbers = numberElements.map(el => parseInt(el.textContent.trim()));
    
    // –ë–µ—Ä–µ–º —Ç–æ–ª—å–∫–æ –ø–µ—Ä–≤—ã–µ 30 —á–∏—Å–µ–ª (–Ω–∞ —Å–ª—É—á–∞–π –µ—Å–ª–∏ –µ—Å—Ç—å –ª–∏—à–Ω–∏–µ)
    const validNumbers = ticketNumbers.slice(0, 30);
    
    // –ò–∑–≤–ª–µ–∫–∞–µ–º –Ω–æ–º–µ—Ä –±–∏–ª–µ—Ç–∞ –∏–∑ —Ç–µ–∫—Å—Ç–∞ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
    const ticketText = ticket.textContent || '';
    const ticketNumber = ticketText.match(/–ë–∏–ª–µ—Ç ‚Ññ(\d+)/)?.[1] || '–Ω–µ–∏–∑–≤–µ—Å—Ç–µ–Ω';
    
    console.log(`\n=== –ê–ù–ê–õ–ò–ó –ë–ò–õ–ï–¢–ê ${ticketNumber} ===`);
    console.log('–ù–∞–π–¥–µ–Ω–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã —Å —á–∏—Å–ª–∞–º–∏:', numberElements.length);
    console.log('–ò–∑–≤–ª–µ—á–µ–Ω—ã —á–∏—Å–ª–∞:', validNumbers);
    console.log('–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —á–∏—Å–µ–ª:', validNumbers.length);
    console.log('–ò—â–µ–º —á–∏—Å–ª–∞:', numbers);
    
    if (validNumbers.length !== 30) {
        console.log('‚ùå –ù–µ–≤–µ—Ä–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —á–∏—Å–µ–ª –≤ –±–∏–ª–µ—Ç–µ:', validNumbers.length);
        return false;
    }
    
    // –†–∞–∑–¥–µ–ª—è–µ–º —á–∏—Å–ª–∞ –Ω–∞ 6 —Å—Ç—Ä–æ–∫ –ø–æ 5 —á–∏—Å–µ–ª –≤ –∫–∞–∂–¥–æ–π (–∫–∞–∫ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –±–∏–ª–µ—Ç–µ)
    const rows = [];
    for (let i = 0; i < 6; i++) {
        const startIndex = i * 5;
        rows.push(validNumbers.slice(startIndex, startIndex + 5));
    }
    
    console.log('–°—Ç—Ä–æ–∫–∏ –±–∏–ª–µ—Ç–∞:');
    rows.forEach((row, i) => console.log(`–°—Ç—Ä–æ–∫–∞ ${i + 1}:`, row));

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ—Ç –ª–∏ –∏—Å–∫–ª—é—á–∞–µ–º—ã—Ö —á–∏—Å–µ–ª –≤ –±–∏–ª–µ—Ç–µ
    const excludeNumbers = state.isPurchaseMode ? state.purchaseExcludeNumbers : state.excludeNumbers;
    console.log('–ò—Å–∫–ª—é—á–∞–µ–º—ã–µ —á–∏—Å–ª–∞:', excludeNumbers);
    if (excludeNumbers && excludeNumbers.length > 0) {
        const hasExcluded = excludeNumbers.some(num => validNumbers.includes(parseInt(num)));
        if (hasExcluded) {
            console.log('‚ùå –í –±–∏–ª–µ—Ç–µ –Ω–∞–π–¥–µ–Ω—ã –∏—Å–∫–ª—é—á–∞–µ–º—ã–µ —á–∏—Å–ª–∞:', excludeNumbers.filter(num => validNumbers.includes(parseInt(num))));
            return false;
        }
    }

    const searchMode = state.isPurchaseMode ? state.purchaseSearchMode : state.searchMode;
    console.log('–†–µ–∂–∏–º –ø–æ–∏—Å–∫–∞:', searchMode);
    
    switch (searchMode) {
        case 'row': {
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∂–¥—É—é —Å—Ç—Ä–æ–∫—É
            for (const row of rows) {
                const allInRow = numbers.every(num => row.includes(parseInt(num)));
                if (allInRow) {
                    console.log('‚úÖ –í—Å–µ —á–∏—Å–ª–∞ –Ω–∞–π–¥–µ–Ω—ã –≤ –æ–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–µ!');
                    return true;
                }
            }
            return false;
        }
        case 'half': {
            // –ü–µ—Ä–≤–∞—è –ø–æ–ª–æ–≤–∏–Ω–∞ - –ø–µ—Ä–≤—ã–µ —Ç—Ä–∏ —Å—Ç—Ä–æ–∫–∏
            const firstHalf = rows.slice(0, 3).flat();

            // –í—Ç–æ—Ä–∞—è –ø–æ–ª–æ–≤–∏–Ω–∞ - –ø–æ—Å–ª–µ–¥–Ω–∏–µ —Ç—Ä–∏ —Å—Ç—Ä–æ–∫–∏
            const secondHalf = rows.slice(3).flat();

            console.log('–ß–∏—Å–ª–∞ –≤ –ø–µ—Ä–≤–æ–π –ø–æ–ª–æ–≤–∏–Ω–µ:', firstHalf);
            console.log('–ß–∏—Å–ª–∞ –≤–æ –≤—Ç–æ—Ä–æ–π –ø–æ–ª–æ–≤–∏–Ω–µ:', secondHalf);

            // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –≤—Å–µ –ª–∏ —É–∫–∞–∑–∞–Ω–Ω—ã–µ —á–∏—Å–ª–∞ –Ω–∞—Ö–æ–¥—è—Ç—Å—è –≤ –ø–µ—Ä–≤–æ–π –ø–æ–ª–æ–≤–∏–Ω–µ
            const allInFirstHalf = numbers.every(num => firstHalf.includes(parseInt(num)));
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –≤—Å–µ –ª–∏ —É–∫–∞–∑–∞–Ω–Ω—ã–µ —á–∏—Å–ª–∞ –Ω–∞—Ö–æ–¥—è—Ç—Å—è –≤–æ –≤—Ç–æ—Ä–æ–π –ø–æ–ª–æ–≤–∏–Ω–µ
            const allInSecondHalf = numbers.every(num => secondHalf.includes(parseInt(num)));

            if (allInFirstHalf) console.log('‚úÖ –í—Å–µ —á–∏—Å–ª–∞ –Ω–∞–π–¥–µ–Ω—ã –≤ –ø–µ—Ä–≤–æ–π –ø–æ–ª–æ–≤–∏–Ω–µ!');
            if (allInSecondHalf) console.log('‚úÖ –í—Å–µ —á–∏—Å–ª–∞ –Ω–∞–π–¥–µ–Ω—ã –≤–æ –≤—Ç–æ—Ä–æ–π –ø–æ–ª–æ–≤–∏–Ω–µ!');

            return allInFirstHalf || allInSecondHalf;
        }
        case 'anywhere': {
            const allFound = numbers.every(num => validNumbers.includes(parseInt(num)));
            if (allFound) console.log('‚úÖ –í—Å–µ —á–∏—Å–ª–∞ –Ω–∞–π–¥–µ–Ω—ã –≤ –±–∏–ª–µ—Ç–µ!');
            return allFound;
        }
        default:
            console.error('–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ä–µ–∂–∏–º –ø–æ–∏—Å–∫–∞:', searchMode);
            return false;
    }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–∏—Å–∫–∞ –ø–æ–¥—Ö–æ–¥—è—â–µ–≥–æ –±–∏–ª–µ—Ç–∞
async function findSuitableTicket(numbers) {
    const state = window.stolotoState;
    
    while (state.isSearching) {
        // –ò—â–µ–º –≤—Å–µ –±–∏–ª–µ—Ç—ã (–Ω–æ–≤–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ - –∫–Ω–æ–ø–∫–∏ —Å —Ç–µ–∫—Å—Ç–æ–º "–ë–∏–ª–µ—Ç ‚Ññ")
        const tickets = Array.from(document.querySelectorAll('button')).filter(btn => 
            btn.textContent.includes('–ë–∏–ª–µ—Ç ‚Ññ')
        );
        console.log(`\n–ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º ${tickets.length} –±–∏–ª–µ—Ç–æ–≤...`);
        let foundTicketsOnPage = [];
        
        // –°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–≤–µ—Ä—è–µ–º –≤—Å–µ –±–∏–ª–µ—Ç—ã –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ
        for (const ticket of tickets) {
            if (!state.isSearching) return false;
            state.ticketsChecked++;
            
            // –í —Ä–µ–∂–∏–º–µ –ø–æ–∫—É–ø–∫–∏ –æ–±–Ω–æ–≤–ª—è–µ–º —Å—á–µ—Ç—á–∏–∫ –ø—Ä–æ—Å–º–æ—Ç—Ä–µ–Ω–Ω—ã—Ö –±–∏–ª–µ—Ç–æ–≤
            if (state.isPurchaseMode) {
                state.purchaseTicketsChecked = state.ticketsChecked;
                state.purchaseStartTime = state.searchStartTime;
            }
            
            const excludeNumbers = state.isPurchaseMode ? state.purchaseExcludeNumbers : state.excludeNumbers;
            const mode = state.isPurchaseMode ? state.purchaseSearchMode : state.searchMode;
            window.stolotoUI.updateStatusBlock(numbers, excludeNumbers, mode);
            
            if (analyzeTicket(ticket, numbers)) {
                // –ò–∑–≤–ª–µ–∫–∞–µ–º –Ω–æ–º–µ—Ä –±–∏–ª–µ—Ç–∞ –∏–∑ —Ç–µ–∫—Å—Ç–∞ –∫–Ω–æ–ø–∫–∏ (–Ω–æ–≤–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞)
                const ticketText = ticket.textContent || '';
                const ticketNumber = ticketText.match(/–ë–∏–ª–µ—Ç ‚Ññ(\d+)/)?.[1] || '–Ω–µ–∏–∑–≤–µ—Å—Ç–µ–Ω';
                console.log('üéØ –ù–∞–π–¥–µ–Ω –ø–æ–¥—Ö–æ–¥—è—â–∏–π –±–∏–ª–µ—Ç:', ticketNumber);
                foundTicketsOnPage.push(ticket);
                
                // –ï—Å–ª–∏ –≤ —Ä–µ–∂–∏–º–µ –ø–æ–∫—É–ø–∫–∏ –∏ —É–∂–µ –¥–æ—Å—Ç–∏–≥–ª–∏ –ª–∏–º–∏—Ç–∞, –ø—Ä–µ–∫—Ä–∞—â–∞–µ–º –ø–æ–∏—Å–∫
                if (state.isPurchaseMode && foundTicketsOnPage.length + state.ticketsPurchased >= state.totalTicketsToBuy) {
                    break;
                }
            }
        }

        // –ï—Å–ª–∏ –Ω–∞—à–ª–∏ –ø–æ–¥—Ö–æ–¥—è—â–∏–µ –±–∏–ª–µ—Ç—ã, –Ω–∞–∂–∏–º–∞–µ–º –Ω–∞ –Ω–∏—Ö
        if (foundTicketsOnPage.length > 0) {
            console.log(`–ù–∞–π–¥–µ–Ω–æ ${foundTicketsOnPage.length} –ø–æ–¥—Ö–æ–¥—è—â–∏—Ö –±–∏–ª–µ—Ç–æ–≤ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ`);
            
            // –ï—Å–ª–∏ –≤ —Ä–µ–∂–∏–º–µ –ø–æ–∫—É–ø–∫–∏, –±–µ—Ä–µ–º —Ç–æ–ª—å–∫–æ –Ω—É–∂–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –±–∏–ª–µ—Ç–æ–≤
            if (state.isPurchaseMode) {
                const ticketsToTake = Math.min(foundTicketsOnPage.length, state.totalTicketsToBuy - state.ticketsPurchased);
                foundTicketsOnPage = foundTicketsOnPage.slice(0, ticketsToTake);
                console.log(`–í —Ä–µ–∂–∏–º–µ –ø–æ–∫—É–ø–∫–∏ –≤—ã–±–∏—Ä–∞–µ–º ${ticketsToTake} –±–∏–ª–µ—Ç–æ–≤`);
            }
            
            // –ù–∞–∂–∏–º–∞–µ–º –Ω–∞ –∫–∞–∂–¥—ã–π –Ω–∞–π–¥–µ–Ω–Ω—ã–π –±–∏–ª–µ—Ç
            for (const ticket of foundTicketsOnPage) {
                if (!state.isSearching) return false;
                
                // –ò–∑–≤–ª–µ–∫–∞–µ–º –Ω–æ–º–µ—Ä –±–∏–ª–µ—Ç–∞ –∏–∑ —Ç–µ–∫—Å—Ç–∞ –∫–Ω–æ–ø–∫–∏ (–Ω–æ–≤–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞)
                const ticketText = ticket.textContent || '';
                const ticketNumber = ticketText.match(/–ë–∏–ª–µ—Ç ‚Ññ(\d+)/)?.[1] || '–Ω–µ–∏–∑–≤–µ—Å—Ç–µ–Ω';
                console.log('–í—ã–±–∏—Ä–∞–µ–º –±–∏–ª–µ—Ç:', ticketNumber);
                ticket.click();
                await new Promise(resolve => setTimeout(resolve, 1000));
            }
            
            // –í —Ä–µ–∂–∏–º–µ –ø–æ–∫—É–ø–∫–∏ –ø—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –∫–Ω–æ–ø–æ–∫ –æ–ø–ª–∞—Ç—ã
            if (state.isPurchaseMode) {
                const paymentStatus = window.stolotoPayment.checkPaymentButtons();
                
                if (paymentStatus.walletPaymentAvailable || paymentStatus.qrPaymentAvailable) {
                    console.log('‚úÖ –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –∫–Ω–æ–ø–∫–∏ –æ–ø–ª–∞—Ç—ã:', paymentStatus);
                    
                    // –ù–∞–∂–∏–º–∞–µ–º –Ω–∞ –∫–Ω–æ–ø–∫—É "–û–ø–ª–∞—Ç–∏—Ç—å –∫–æ—à–µ–ª—å–∫–æ–º"
                    if (paymentStatus.walletPaymentAvailable) {
                        const allButtons = Array.from(document.querySelectorAll('button'));
                        const payByWalletButton = allButtons.find(btn => 
                            btn.textContent.trim().includes('–û–ø–ª–∞—Ç–∏—Ç—å –∫–æ—à–µ–ª—å–∫–æ–º')
                        );
                        
                        if (payByWalletButton) {
                            console.log('‚úÖ –ù–∞–∂–∏–º–∞–µ–º –∫–Ω–æ–ø–∫—É "–û–ø–ª–∞—Ç–∏—Ç—å –∫–æ—à–µ–ª—å–∫–æ–º"');
                            payByWalletButton.click();
                            
                            // –ñ–¥–µ–º 5 —Å–µ–∫—É–Ω–¥ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ–ø–ª–∞—Ç—ã
                            await new Promise(resolve => setTimeout(resolve, 5000));
                            console.log('‚úÖ –û–ø–ª–∞—Ç–∞ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–∞');
                        }
                    }
                    
                    // –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º —Å—á–µ—Ç—á–∏–∫ –∫—É–ø–ª–µ–Ω–Ω—ã—Ö –±–∏–ª–µ—Ç–æ–≤
                    state.ticketsPurchased += foundTicketsOnPage.length;
                    
                    // –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø—Ä–æ—Å–º–æ—Ç—Ä–µ–Ω–Ω—ã—Ö –±–∏–ª–µ—Ç–∞—Ö –∏ –≤—Ä–µ–º–µ–Ω–∏ –ø–æ–∏—Å–∫–∞
                    state.purchaseTicketsChecked = state.ticketsChecked;
                    state.purchaseStartTime = state.searchStartTime;
                    
                    // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å
                    const excludeNumbers = state.purchaseExcludeNumbers;
                    const mode = state.purchaseSearchMode;
                    window.stolotoUI.updateStatusBlock(numbers, excludeNumbers, mode);
                    
                    // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–∫—É–ø–∫–∏
                    await state.savePurchaseState();
                    
                    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –¥–æ—Å—Ç–∏–≥–ª–∏ –ª–∏ –º—ã –ª–∏–º–∏—Ç–∞ –ø–æ–∫—É–ø–æ–∫
                    if (state.ticketsPurchased >= state.totalTicketsToBuy) {
                        console.log('‚úÖ –î–æ—Å—Ç–∏–≥–Ω—É—Ç –ª–∏–º–∏—Ç –ø–æ–∫—É–ø–æ–∫:', state.ticketsPurchased);
                        
                        // –û–±–Ω–æ–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç –±–ª–æ–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è
                        const statusEl = document.getElementById('rusloto-status');
                        if (statusEl) {
                            const timeSpent = window.stolotoUtils.formatSearchTime();
                            statusEl.textContent = `–ü–æ–∫—É–ø–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!\n–ö—É–ø–ª–µ–Ω–æ –±–∏–ª–µ—Ç–æ–≤: ${state.ticketsPurchased} –∏–∑ ${state.totalTicketsToBuy}\n–ü—Ä–æ–≤–µ—Ä–µ–Ω–æ: ${state.ticketsChecked}, –≤—Ä–µ–º—è: ${timeSpent}`;
                            statusEl.style.background = '#28a745'; // –∑–µ–ª–µ–Ω—ã–π —Ç–æ–ª—å–∫–æ –ø—Ä–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏
                        }
                        
                        // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–∫—É–ø–∫–∏, —Ç.–∫. –º—ã –∑–∞–≤–µ—Ä—à–∏–ª–∏ –∑–∞–¥–∞—á—É
                        await state.resetPurchaseState();
                        
                        // –ó–∞–≤–µ—Ä—à–∞–µ–º –ø–æ–∏—Å–∫
                        return true;
                    } else {
                        console.log('‚è≥ –ù—É–∂–Ω–æ –∫—É–ø–∏—Ç—å –µ—â–µ –±–∏–ª–µ—Ç–æ–≤:', state.totalTicketsToBuy - state.ticketsPurchased);
                        
                        // –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è –ø–æ–∫—É–ø–∫–∏
                        window.location.reload();
                        return true;
                    }
                } else {
                    console.log('‚ùå –ö–Ω–æ–ø–∫–∏ –æ–ø–ª–∞—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã, –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º –ø–æ–∏—Å–∫');
                }
            } else {
                // –û–±—ã—á–Ω—ã–π —Ä–µ–∂–∏–º - –æ–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –ø–æ—Å–ª–µ –≤—ã–±–æ—Ä–∞ –≤—Å–µ—Ö –±–∏–ª–µ—Ç–æ–≤
                let statusEl = document.getElementById('rusloto-status');
                if (statusEl) {
                    const timeSpent = window.stolotoUtils.formatSearchTime();
                    statusEl.textContent = foundTicketsOnPage.length === 1
                        ? `–ü–æ–∏—Å–∫ –∑–∞–≤–µ—Ä—à—ë–Ω! –ù–∞–π–¥–µ–Ω –ø–æ–¥—Ö–æ–¥—è—â–∏–π –±–∏–ª–µ—Ç.\n–ü—Ä–æ–≤–µ—Ä–µ–Ω–æ –±–∏–ª–µ—Ç–æ–≤: ${state.ticketsChecked}, –≤—Ä–µ–º—è: ${timeSpent}`
                        : `–ü–æ–∏—Å–∫ –∑–∞–≤–µ—Ä—à—ë–Ω! –ù–∞–π–¥–µ–Ω–æ –±–∏–ª–µ—Ç–æ–≤: ${foundTicketsOnPage.length}.\n–ü—Ä–æ–≤–µ—Ä–µ–Ω–æ: ${state.ticketsChecked}, –≤—Ä–µ–º—è: ${timeSpent}`;
                    statusEl.style.background = '#28a745'; // –∑–µ–ª–µ–Ω—ã–π —Ü–≤–µ—Ç —Ç–æ–ª—å–∫–æ –ø—Ä–∏ –ø–æ–ª–Ω–æ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ –ø–æ–∏—Å–∫–∞
                }

                console.log('‚úÖ –ü–æ–∏—Å–∫ —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω');
                return true;
            }
        }
        
        if (!state.isSearching) return false;
        
        console.log('‚ùå –ü–æ–¥—Ö–æ–¥—è—â–∏–π –±–∏–ª–µ—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω –Ω–∞ —ç—Ç–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ');
        
        const otherTicketsButton = Array.from(document.querySelectorAll('button')).find(
            btn => btn.textContent.trim() === '–î—Ä—É–≥–∏–µ –±–∏–ª–µ—Ç—ã'
        );
        
        if (otherTicketsButton) {
            console.log('–ü—Ä–æ–±—É–µ–º –¥—Ä—É–≥–∏–µ –±–∏–ª–µ—Ç—ã...');
            
            // –í —Ä–µ–∂–∏–º–µ –ø–æ–∫—É–ø–∫–∏ –æ–±–Ω–æ–≤–ª—è–µ–º –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–µ—Ä–µ–¥ –Ω–∞–∂–∞—Ç–∏–µ–º –Ω–∞ –∫–Ω–æ–ø–∫—É
            if (state.isPurchaseMode) {
                state.purchaseTicketsChecked = state.ticketsChecked;
                state.purchaseStartTime = state.searchStartTime;
                await state.savePurchaseState();
            }
            
            otherTicketsButton.click();
            await new Promise(resolve => setTimeout(resolve, 1500));
        } else {
            console.log('–ö–Ω–æ–ø–∫–∞ "–î—Ä—É–≥–∏–µ –±–∏–ª–µ—Ç—ã" –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
            
            // –í —Ä–µ–∂–∏–º–µ –ø–æ–∫—É–ø–∫–∏, –µ—Å–ª–∏ –µ—â–µ –Ω–µ –¥–æ—Å—Ç–∏–≥–ª–∏ –ª–∏–º–∏—Ç–∞, –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É
            if (state.isPurchaseMode && state.ticketsPurchased < state.totalTicketsToBuy) {
                console.log('–ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è –ø–æ–∏—Å–∫–∞ –±–∏–ª–µ—Ç–æ–≤...');
                
                // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–µ—Ä–µ–¥ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–æ–π
                state.purchaseTicketsChecked = state.ticketsChecked;
                state.purchaseStartTime = state.searchStartTime;
                await state.savePurchaseState();
                
                window.location.reload();
                return true;
            }
            
            break;
        }
    }
    
    if (!state.isPurchaseMode) {
        window.stolotoUI.removeStatusBlock();
    }
    return false;
}

// –≠–∫—Å–ø–æ—Ä—Ç —Ñ—É–Ω–∫—Ü–∏–π –≤ –≥–ª–æ–±–∞–ª—å–Ω–æ–µ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ
window.stolotoSearch = {
    clearSelection,
    analyzeTicket,
    findSuitableTicket
};
